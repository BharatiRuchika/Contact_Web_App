{"ast":null,"code":"import { LOGIN_USER_REQUEST, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS } from \"../constants/userConstants\";\nimport { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, CLEAR_ERRORS } from \"../constants/userConstants\";\nimport { GET_USER_DETAILS_FAIL, GET_USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    console.log(\"email\", email);\n    console.log(\"password\", password);\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/users/login\", {\n      email,\n      password\n    }, config);\n    console.log(\"data\", data);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n    console.log(\"error\", error.response.data.errMessage);\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const register = userData => async dispatch => {\n  console.log(\"im in register\");\n  console.log(\"userdata\", userData);\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/users/register\", userData, config);\n    console.log(\"registerdata\", data);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error.response);\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\n\n//logout user\nexport const logoutUser = () => async dispatch => {\n  console.log(\"im in load user\");\n  try {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    console.log(\"logouterrpr\", error);\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const getUserDetails = details => dispatch => {\n  console.log(\"action\", details);\n  try {\n    dispatch({\n      type: GET_USER_DETAILS_SUCCESS,\n      payload: details\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_DETAILS_FAIL,\n      payload: error\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_USER_REQUEST","LOGIN_USER_FAIL","LOGIN_USER_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER_SUCCESS","REGISTER_USER_REQUEST","CLEAR_ERRORS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_SUCCESS","axios","login","email","password","dispatch","console","log","type","config","headers","data","post","payload","error","response","errMessage","register","userData","logoutUser","getUserDetails","details","clearErrors"],"sources":["/Users/ruchikaashokbharati/Documents/Contacts_Web_App/frontend/src/actions/userActions.js"],"sourcesContent":["import { LOGIN_USER_REQUEST, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS } from \"../constants/userConstants\";\nimport { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, CLEAR_ERRORS } from \"../constants/userConstants\"\nimport { GET_USER_DETAILS_FAIL, GET_USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        console.log(\"email\", email);\n        console.log(\"password\", password);\n        dispatch({\n            type: LOGIN_USER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(\"http://localhost:3001/users/login\", { email, password }, config);\n        console.log(\"data\", data);\n        dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        console.log(\"error\", error);\n        console.log(\"error\", error.response.data.errMessage);\n        dispatch({\n            type: LOGIN_USER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\nexport const register = (userData) => async (dispatch) => {\n    console.log(\"im in register\");\n    console.log(\"userdata\", userData);\n    try {\n        dispatch({\n            type: REGISTER_USER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        const { data } = await axios.post(\"http://localhost:3001/users/register\", userData, config)\n        console.log(\"registerdata\", data);\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        console.log(\"error\", error.response);\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\n//logout user\nexport const logoutUser = () => async (dispatch) => {\n    console.log(\"im in load user\");\n    try {\n        dispatch({\n            type: LOGOUT_SUCCESS\n        })\n    } catch (error) {\n        console.log(\"logouterrpr\", error);\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\nexport const getUserDetails = (details) => (dispatch) => {\n    console.log(\"action\", details);\n    try {\n        dispatch({\n            type: GET_USER_DETAILS_SUCCESS,\n            payload: details\n        })\n    } catch (error) {\n        dispatch({\n            type: GET_USER_DETAILS_FAIL,\n            payload: error\n        })\n    }\n}\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}