{"ast":null,"code":"import { LOGIN_USER_REQUEST, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS } from \"../constants/userConstants\";\nimport { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, CLEAR_ERRORS } from \"../constants/userConstants\";\nimport { GET_USER_DETAILS_FAIL, GET_USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    console.log(\"email\", email);\n    console.log(\"password\", password);\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/users/login\", {\n      email,\n      password\n    }, config);\n    console.log(\"data\", data);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n    console.log(\"error\", error.response.data.errMessage);\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const register = userData => async dispatch => {\n  console.log(\"im in register\");\n  console.log(\"userdata\", userData);\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/users/register\", userData, config);\n    console.log(\"registerdata\", data);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error.response);\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\n\n//logout user\nexport const logoutUser = () => async dispatch => {\n  console.log(\"im in load user\");\n  try {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    console.log(\"logouterrpr\", error);\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const getUserDetails = details => dispatch => {\n  console.log(\"action\", details);\n  try {\n    dispatch({\n      type: GET_USER_DETAILS_SUCCESS,\n      payload: details\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_DETAILS_FAIL,\n      payload: error\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_USER_REQUEST","LOGIN_USER_FAIL","LOGIN_USER_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER_SUCCESS","REGISTER_USER_REQUEST","CLEAR_ERRORS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_SUCCESS","axios","login","email","password","dispatch","console","log","type","config","headers","data","post","payload","error","response","errMessage","register","userData","logoutUser","getUserDetails","details","clearErrors"],"sources":["/Users/ruchikaashokbharati/Documents/Contacts_Web_App/frontend/src/actions/userActions.js"],"sourcesContent":["import { LOGIN_USER_REQUEST, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS,LOGOUT_FAIL,LOGOUT_SUCCESS } from \"../constants/userConstants\";\nimport { REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, CLEAR_ERRORS } from \"../constants/userConstants\"\nimport { GET_USER_DETAILS_FAIL,GET_USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async (dispatch) => {\n    try{\n    console.log(\"email\", email);\n    console.log(\"password\", password);\n    dispatch({\n        type: LOGIN_USER_REQUEST\n    })\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n      }\n    const {data} = await axios.post(\"http://localhost:3001/users/login\",{email,password},config);\n    console.log(\"data\",data);\n    dispatch({\n        type:LOGIN_USER_SUCCESS,\n        payload:data\n    })\n}catch(error){\n    console.log(\"error\",error);\n    console.log(\"error\",error.response.data.errMessage);\n    dispatch({\n        type:LOGIN_USER_FAIL,\n        payload:error.response.data.errMessage\n    })\n}\n}\n\n\nexport const register = (userData)=>async(dispatch)=>{\n    console.log(\"im in register\");\n    console.log(\"userdata\",userData);\n    try{\n      dispatch({\n          type:REGISTER_USER_REQUEST\n     })\n     const config={\n       headers:{\n           'Content-Type':'multipart/form-data'\n       }\n     }\n const {data} = await axios.post(\"http://localhost:3001/users/register\",userData,config)\n console.log(\"registerdata\",data);\n dispatch({\n     type:REGISTER_USER_SUCCESS,\n     payload:data\n })\n    }catch(error){\n        console.log(\"error\",error.response);\n     dispatch({\n         type:REGISTER_USER_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n //logout user\n export const logoutUser = ()=>async(dispatch)=>{\n    console.log(\"im in load user\");\n   try{\n  \n\ndispatch({\n    type:LOGOUT_SUCCESS\n})\n}catch(error){\n    console.log(\"logouterrpr\",error);\n    dispatch({\n        type:LOGOUT_FAIL,\n        payload:error.response.data.errMessage\n    })\n   }\n}\n\nexport const getUserDetails = (details)=>(dispatch)=>{\n    console.log(\"action\",details);\n    try{\n        dispatch({\n            type:GET_USER_DETAILS_SUCCESS,\n            payload:details\n        })\n    }catch(error){\n        dispatch({\n            type:GET_USER_DETAILS_FAIL,\n            payload:error\n        })\n    }\n}\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}